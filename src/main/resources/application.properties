# server configuration
server.port=5000

#DATASOURCE
spring.datasource.url=@db.url@
spring.datasource.username=@db.username@
spring.datasource.password=@db.password@
spring.datasource.driver-class-name=@db.driverClassName@


# handle the connection timeout issue on inactivity
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.hikari.leak-detection-threshold=60000
#spring.datasource.separator=^^^ END OF SCRIPT ^^^;

# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

#JPA
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.data.jpa.repositories.enabled=true
spring.jpa.database-platform=@db.dialect@

spring.h2.console.enabled=true
spring.h2.console.path=/h2/

#FILE UPLOAD
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.location=/tmp
files.upload.path=@storage.path@


spring.thymeleaf.mode=HTML

#spring.mvc.favicon.enabled=false
spring.jpa.open-in-view=false

# Caching
spring.cache.cache-names=pksf_statistics
spring.cache.caffeine.spec=expireAfterWrite=30s

# Logging
logging.level.org.springframework.web=@logging.spring@
logging.level.org.hibernate=@logging.hibernate@
logging.level.com.cmedhealth.webservice=@logging.app@

# Server compressionx
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

spring.jackson.serialization.write-dates-as-timestamps=true

#BASE URL
app.domain=@base.url@
baseUrl=@base.url@
baseUrlApi=@base.url@
baseUrlImages=@base.imageurl@
applicationName=ExampleApp
contactEmail=info@example.com

host.full.dns.auth.link=@swagger.host@

app.env=@app.env@


#Spring Security / Queries for AuthenticationManagerBuilder
spring.queries.users-query=select u.email, u.password, u.active from m_users u where u.email=?
spring.queries.users-query-username=select u.username, u.password, u.active from m_users u where u.username=?
spring.queries.roles-query=select u.email, r2.name from m_users u join m_users_roles r on (u.id = r.user_id) join roles r2 on r.roles_id = r2.id where u.email=?
spring.queries.roles-query-username=select u.username, r2.name from m_users u join m_users_roles r on (u.id = r.user_id) join roles r2 on r.roles_id = r2.id where u.username=?
